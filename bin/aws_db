#!/usr/bin/env ruby

require_relative '../lib/aws_pipes'
require 'trollop'
require 'aws-sdk'
require 'open-uri'

opts = AwsPipes.common_aws_options(
  "aws_db",
  <<-EOS
Write rows to Amazom DynamoDB.

Usage:
       aws_db [options] table-name col1 [col2 col3 ...]
       Save each tab-delimited line of STDIN as a row in Amazon DynamoDB
EOS
)

table_name = ARGV.shift
unless table_name
  Trollop::die "Please provide table name"
end

col_names = ARGV
if col_names.length == 0
  Trollop::die "Please provide column names"
end

db = AWS::DynamoDB.new(
  :access_key_id     => AwsPipes.access_key_id(opts),
  :secret_access_key => AwsPipes.secret_access_key(opts)
)

$stdin.sync = true
table = db.tables[table_name]
table.load_schema

while row = $stdin.gets
  begin
    table.items.create Hash[col_names.zip(row.split "\t")]
  rescue AWS::DynamoDB::Errors::ProvisionedThroughputExceededException
    new_write_capacity = table.write_capacity_units * 2
    warn "Exceeded provisioned throughput for table #{table_name}."
    warn "Increasing write capacity to #{new_write_capacity}."
    begin
      table.provision_throughput :write_capacity_units => new_write_capacity
    rescue AWS::DynamoDB::Errors::ResourceInUseException
      # throughput provisioning in progress, give it time
      sleep 10
    end
    retry
  rescue Interrupt
    exit 0
  end
end
